let to_name = String.concat "_"
let to_dir  = String.concat "/"
let prefix  = "coq-pkgs"

(* Default FS list *)
let plugin_list =
  [ ["Coq"; "syntax"]
  ; ["Coq"; "decl_mode"]
  ; ["Coq"; "cc"]
  ; ["Coq"; "firstorder"]
  ; ["Coq"; "setoid_ring"]
  ; ["Coq"; "extraction"]
  ; ["Coq"; "funind"]
  ; ["Coq"; "quote"]

  ; ["Coq"; "fourier"]
  ; ["Coq"; "omega"]
  ; ["Coq"; "micromega"]
  ; ["Coq"; "romega"]
  ]

let coq_theory_list =
  [ ["Coq"; "Init"]
  ; ["Coq"; "Unicode"]
  ; ["Coq"; "Bool"]
  ; ["Coq"; "Logic"]
  ; ["Coq"; "Program"]
  ; ["Coq"; "Classes"]
  ; ["Coq"; "Structures"]
  ; ["Coq"; "Relations"]
  ; ["Coq"; "Setoids"]
  ; ["Coq"; "Arith"]
  ; ["Coq"; "PArith"]
  ; ["Coq"; "NArith"]
  ; ["Coq"; "ZArith"]
  ; ["Coq"; "QArith"]
  ; ["Coq"; "Lists"]
  ; ["Coq"; "Vectors"]
  ; ["Coq"; "Reals"]
  ; ["Coq"; "Sets"]
  ; ["Coq"; "FSets"]
  ; ["Coq"; "MSets"]
  ; ["Coq"; "Sorting"]
  ; ["Coq"; "Wellfounded"]
  ; ["Coq"; "Strings"]

  ; ["Coq"; "Numbers"]
  ; ["Coq"; "Numbers"; "NatInt"]
  ; ["Coq"; "Numbers"; "Natural"; "Abstract"]
  ; ["Coq"; "Numbers"; "Integer"; "Abstract"]
  ]

(* Packages: name, deps, modules *)

let pkgs : (string * string list * string list list) list=
  [ "init", [],
    [ ["Coq"; "syntax"]
    ; ["Coq"; "decl_mode"]
    ; ["Coq"; "cc"]
    ; ["Coq"; "firstorder"]
    ; ["Coq"; "extraction"]
    ; ["Coq"; "funind"]
    ; ["Coq"; "quote"]
    ; ["Coq"; "Init"]
    ; ["Coq"; "Bool"]
    ; ["Coq"; "Unicode"]
    ; ["mathcomp"; "ssreflect"]
    ]
  ; "math-comp", [],
    [ ["mathcomp"; "algebra"]
    ; ["mathcomp"; "fingroup"]
    ; ["mathcomp"; "solvable"]
    ; ["mathcomp"; "field"]
    ]
  ; "coq-base", [],
    [ ["Coq"; "Logic"]
    ; ["Coq"; "Program"]
    ; ["Coq"; "Classes"]
    ; ["Coq"; "Structures"]
    ; ["Coq"; "Relations"]
    ; ["Coq"; "Setoids"]
    ; ["Coq"; "Lists"]
    ; ["Coq"; "Vectors"]
    ; ["Coq"; "Sets"]
    ; ["Coq"; "Sorting"]
    ; ["Coq"; "FSets"]
    ; ["Coq"; "MSets"]
    ; ["Coq"; "Wellfounded"]
    ; ["Coq"; "Strings"]
    ]
  ; "coq-arith", ["coq-base"],
    [ ["Coq"; "setoid_ring"]
    ; ["Coq"; "Arith"]
    ; ["Coq"; "NArith"]
    ; ["Coq"; "PArith"]
    ; ["Coq"; "ZArith"]
    ; ["Coq"; "QArith"]
    ; ["Coq"; "Numbers"]
    ; ["Coq"; "Numbers"; "NatInt"]
    ; ["Coq"; "Numbers"; "Natural"; "Abstract"]
    ; ["Coq"; "Numbers"; "Integer"; "Abstract"]
    ]
  ; "mtac", ["coq-arith"],
    [ ["Mtac"]
    ]
  ; "coq-reals", ["coq-arith"],
    [ ["Coq"; "fourier"]
    ; ["Coq"; "omega"]
    ; ["Coq"; "micromega"]
    ; ["Coq"; "Reals"] ]
  ; "coquelicot", ["coq-reals"],
    [ [ "Coquelicot" ] ]
  ; "flocq", ["coq-reals"],
    [ ["Coq"; "romega"]
    ; [ "Flocq" ; "Core" ] ]
  ; "tlc", ["coq-reals"],
    [ ["TLC"] ]
  ; "sf", ["coq-reals"],
    [ ["SF"] ]
  ; "cpdt", ["coq-reals"],
    [ ["Cpdt"] ]

  ; "color", [ "coq-reals"],
    [ ["CoLoR" ; "Filter"]
    ; ["CoLoR" ; "RPO"]
    ; ["CoLoR" ; "Coccinelle"]
    ; ["CoLoR" ; "Coccinelle" ; "list_extensions"]
    ; ["CoLoR" ; "Coccinelle" ; "term_orderings"]
    ; ["CoLoR" ; "Coccinelle" ; "basis"]
    ; ["CoLoR" ; "Coccinelle" ; "examples"]
    ; ["CoLoR" ; "Coccinelle" ; "examples" ; "cime_trace"]
    ; ["CoLoR" ; "Coccinelle" ; "ac_matching"]
    ; ["CoLoR" ; "Coccinelle" ; "term_algebra"]
    ; ["CoLoR" ; "Coccinelle" ; "unification"]
    ; ["CoLoR" ; "NonTermin"]
    ; ["CoLoR" ; "Term"]
    ; ["CoLoR" ; "Term" ; "Lambda"]
    ; ["CoLoR" ; "Term" ; "SimpleType"]
    ; ["CoLoR" ; "Term" ; "String"]
    ; ["CoLoR" ; "Term" ; "Varyadic"]
    ; ["CoLoR" ; "Term" ; "WithArity"]
    ; ["CoLoR" ; "HORPO"]
    ; ["CoLoR" ; "ProofChecker"]
    ; ["CoLoR" ; "MatrixInt"]
    ; ["CoLoR" ; "SemLab"]
    ; ["CoLoR" ; "Conversion"]
    ; ["CoLoR" ; "DP"]
    ; ["CoLoR" ; "Util"]
    ; ["CoLoR" ; "Util" ; "Multiset"]
    ; ["CoLoR" ; "Util" ; "Vector"]
    ; ["CoLoR" ; "Util" ; "Pair"]
    ; ["CoLoR" ; "Util" ; "FSet"]
    ; ["CoLoR" ; "Util" ; "Integer"]
    ; ["CoLoR" ; "Util" ; "FMap"]
    ; ["CoLoR" ; "Util" ; "Matrix"]
    ; ["CoLoR" ; "Util" ; "Logic"]
    ; ["CoLoR" ; "Util" ; "Polynom"]
    ; ["CoLoR" ; "Util" ; "Option"]
    ; ["CoLoR" ; "Util" ; "FGraph"]
    ; ["CoLoR" ; "Util" ; "Function"]
    ; ["CoLoR" ; "Util" ; "List"]
    ; ["CoLoR" ; "Util" ; "Relation"]
    ; ["CoLoR" ; "Util" ; "Bool"]
    ; ["CoLoR" ; "Util" ; "Nat"]
    ; ["CoLoR" ; "Util" ; "Set"]
    ; ["CoLoR" ; "Util" ; "Algebra"]
    ; ["CoLoR" ; "PolyInt"]
    ; ["CoLoR" ; "SubtermCrit"]
    ; ["CoLoR" ; "MPO"]
    ; ["CoLoR" ; "MannaNess"]
    ]

  ; "dsp", ["math-comp"],
    [ ["Dsp"] ]

  ; "relalg", ["coq-arith"],
    [ ["RelationAlgebra"] ]

  ; "hott-init", [],
    [ ["Coq"; "syntax"]
    ; ["Coq"; "Init"]
    ; ["Coq"; "Bool"]
    ; ["Coq"; "Program"]
    ; ["Coq"; "Unicode"]
    ]

  ; "hott", ["hott-init"],

    [ ["HoTT"]
    ; ["HoTT" ; "Algebra"]
    ; ["HoTT" ; "Basics"]
    ; ["HoTT" ; "categories"]
    ; ["HoTT" ; "categories"; "Adjoint"]
    ; ["HoTT" ; "categories"; "Adjoint"; "Composition"]
    ; ["HoTT" ; "categories"; "Adjoint"; "Functorial"]
    ; ["HoTT" ; "categories"; "Adjoint"; "UniversalMorphisms"]
    ; ["HoTT" ; "categories"; "Cat"]
    ; ["HoTT" ; "categories"; "Category"]
    ; ["HoTT" ; "categories"; "Category"; "Sigma"]
    ; ["HoTT" ; "categories"; "Category"; "Subcategory"]
    ; ["HoTT" ; "categories"; "CategoryOfSections"]
    ; ["HoTT" ; "categories"; "Comma"]
    ; ["HoTT" ; "categories"; "ExponentialLaws"]
    ; ["HoTT" ; "categories"; "ExponentialLaws"; "Law1"]
    ; ["HoTT" ; "categories"; "ExponentialLaws"; "Law2"]
    ; ["HoTT" ; "categories"; "ExponentialLaws"; "Law3"]
    ; ["HoTT" ; "categories"; "ExponentialLaws"; "Law4"]
    ; ["HoTT" ; "categories"; "Functor"]
    ; ["HoTT" ; "categories"; "Functor"; "Composition"]
    ; ["HoTT" ; "categories"; "Functor"; "Composition"; "Functorial"]
    ; ["HoTT" ; "categories"; "Functor"; "Prod"]
    ; ["HoTT" ; "categories"; "Functor"; "Pointwise"]
    ; ["HoTT" ; "categories"; "FunctorCategory"]
    ; ["HoTT" ; "categories"; "Grothendieck"]
    ; ["HoTT" ; "categories"; "Grothendieck"; "ToSet"]
    ; ["HoTT" ; "categories"; "GroupoidCategory"]
    ; ["HoTT" ; "categories"; "InitialTerminalCategory"]
    ; ["HoTT" ; "categories"; "KanExtensions"]
    ; ["HoTT" ; "categories"; "LaxComma"]
    ; ["HoTT" ; "categories"; "Limits"]
    ; ["HoTT" ; "categories"; "NaturalTransformation"]
    ; ["HoTT" ; "categories"; "NaturalTransformation"; "Composition"]
    ; ["HoTT" ; "categories"; "Profunctor"]
    ; ["HoTT" ; "categories"; "Pseudofunctor"]
    ; ["HoTT" ; "categories"; "PseudonaturalTransformation"]
    ; ["HoTT" ; "categories"; "SetCategory"]
    ; ["HoTT" ; "categories"; "SetCategory"; "Functors"]
    ; ["HoTT" ; "categories"; "Structure"]
    ; ["HoTT" ; "Comodalities"]
    ; ["HoTT" ; "hit"]
    ; ["HoTT" ; "Modalities"]
    ; ["HoTT" ; "Spaces"]
    ; ["HoTT" ; "Tactics"]
    ; ["HoTT" ; "Types"] ]
  ]

