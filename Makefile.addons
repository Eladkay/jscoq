# Makefile for addons

all:

all-addons: ssr-libs coquelicot flocq tlc sf

# XXX: We should include the common addon makefile thing.

########################################################################
# Addons: ssreflect                                                    #
########################################################################

SSR_HOME=~/external/coq/math-comp/mathcomp/
SSR_PLUG=$(SSR_HOME)/ssreflect.cma

SSR_DEST=coq-fs/mathcomp_ssreflect
SSR_FILES=$(wildcard $(SSR_HOME)/ssreflect/*.vo)

# XXX: Use a pattern rule!
$(SSR_DEST):
	mkdir -p $(SSR_DEST)

ssr: $(SSR_DEST) $(SSR_PLUG) $(SSR_FILES)
	$(shell cp -a $(SSR_PLUG) $(SSR_DEST)/ssreflect.cma)
	$(shell for i in $(SSR_FILES); do cp -a $$i $(SSR_DEST)/`basename $$i`; done)

SSR_ALG_DEST=coq-fs/mathcomp_algebra
SSR_ALG_FILES=$(wildcard $(SSR_HOME)/algebra/*.vo)

$(SSR_ALG_DEST):
	mkdir -p $(SSR_ALG_DEST)

ssr-alg: $(SSR_ALG_DEST) $(SSR_ALG_FILES)
	$(shell for i in $(SSR_ALG_FILES); do cp -a $$i $(SSR_ALG_DEST)/`basename $$i`; done)

SSR_FIN_DEST=coq-fs/mathcomp_fingroup
SSR_FIN_FILES=$(wildcard $(SSR_HOME)/fingroup/*.vo)

$(SSR_FIN_DEST):
	mkdir -p $(SSR_FIN_DEST)

ssr-fin: $(SSR_FIN_DEST) $(SSR_FIN_FILES)
	$(shell for i in $(SSR_FIN_FILES); do cp -a $$i $(SSR_FIN_DEST)/`basename $$i`; done)

SSR_SOL_DEST=coq-fs/mathcomp_solvable
SSR_SOL_FILES=$(wildcard $(SSR_HOME)/solvable/*.vo)

$(SSR_SOL_DEST):
	mkdir -p $(SSR_SOL_DEST)

ssr-sol: $(SSR_SOL_DEST) $(SSR_SOL_FILES)
	$(shell for i in $(SSR_SOL_FILES); do cp -a $$i $(SSR_SOL_DEST)/`basename $$i`; done)

SSR_FLD_DEST=coq-fs/mathcomp_field
SSR_FLD_FILES=$(wildcard $(SSR_HOME)/field/*.vo)

$(SSR_FLD_DEST):
	mkdir -p $(SSR_FLD_DEST)

ssr-fld: $(SSR_FLD_DEST) $(SSR_FLD_FILES)
	$(shell for i in $(SSR_FLD_FILES); do cp -a $$i $(SSR_FLD_DEST)/`basename $$i`; done)

ssr-libs: ssr ssr-alg ssr-fin ssr-sol ssr-fld

########################################################################
# Addons: coquelicot                                                   #
########################################################################

COQCOT_HOME=~/external/coq/coquelicot
COQCOT_DEST=coq-fs/Coquelicot
COQCOT_FILES=$(wildcard $(COQCOT_HOME)/theories/*.vo)

$(COQCOT_DEST):
	mkdir -p $(COQCOT_DEST)

coquelicot: $(COQCOT_DEST) $(COQCOT_FILES)
	$(shell for i in $(COQCOT_FILES); do cp -a $$i $(COQCOT_DEST)/`basename $$i`; done)

########################################################################
# Addons: flocq                                                        #
########################################################################

# XXX: Must make a generic method for this
FLOCQ_HOME=~/external/coq/flocq/
FLOCQ_DEST=coq-fs/Flocq_Core
FLOCQ_FILES=$(wildcard $(FLOCQ_HOME)/src/Core/*.vo)

$(FLOCQ_DEST):
	mkdir -p $(FLOCQ_DEST)

flocq: $(FLOCQ_DEST) $(FLOCQ_FILES)
	$(shell for i in $(FLOCQ_FILES); do cp -a $$i $(FLOCQ_DEST)/`basename $$i`; done)

########################################################################
# Addons: tlc                                                        #
########################################################################

# XXX: Must make a generic method for this
TLC_HOME=~/external/coq/tlc/
TLC_DEST=coq-fs/TLC
TLC_FILES=$(wildcard $(TLC_HOME)/src/*.vo)

$(TLC_DEST):
	mkdir -p $(TLC_DEST)

tlc: $(TLC_DEST) $(TLC_FILES)
	$(shell for i in $(TLC_FILES); do cp -a $$i $(TLC_DEST)/`basename $$i`; done)

########################################################################
# Addons: SF                                                           #
########################################################################

# XXX: Must make a generic method for this
SF_HOME=~/external/coq/sf/
SF_DEST=coq-fs/SF
SF_FILES=$(wildcard $(SF_HOME)/*.vo)

$(SF_DEST):
	mkdir -p $(SF_DEST)

sf: $(SF_DEST) $(SF_FILES)
	$(shell for i in $(SF_FILES); do cp -a $$i $(SF_DEST)/`basename $$i`; done)

